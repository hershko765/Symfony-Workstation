Marionette.RegionManager=function(e){var t=e.Controller.extend({constructor:function(t){this._regions={},e.Controller.prototype.constructor.call(this,t)},addRegions:function(e,t){var n={};return _.each(e,function(e,r){_.isString(e)&&(e={selector:e}),e.selector&&(e=_.defaults({},e,t));var i=this.addRegion(r,e);n[r]=i},this),n},addRegion:function(t,n){var r,i=_.isObject(n),s=_.isString(n),o=!!n.selector;return s||i&&o?r=e.Region.buildRegion(n,e.Region):_.isFunction(n)?r=e.Region.buildRegion(n,e.Region):r=n,this._store(t,r),this.triggerMethod("region:add",t,r),r},get:function(e){return this._regions[e]},removeRegion:function(e){var t=this._regions[e];this._remove(e,t)},removeRegions:function(){_.each(this._regions,function(e,t){this._remove(t,e)},this)},closeRegions:function(){_.each(this._regions,function(e,t){e.close()},this)},close:function(){this.removeRegions(),e.Controller.prototype.close.apply(this,arguments)},_store:function(e,t){this._regions[e]=t,this._setLength()},_remove:function(e,t){t.close(),t.stopListening(),delete this._regions[e],this._setLength(),this.triggerMethod("region:remove",e,t)},_setLength:function(){this.length=_.size(this._regions)}});return e.actAsCollection(t.prototype,"_regions"),t}(Marionette);
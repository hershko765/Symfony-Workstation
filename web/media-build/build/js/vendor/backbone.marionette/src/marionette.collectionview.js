Marionette.CollectionView=Marionette.View.extend({itemViewEventPrefix:"itemview",constructor:function(e){this._initChildViewStorage(),Marionette.View.prototype.constructor.apply(this,arguments),this._initialEvents(),this.initRenderBuffer()},initRenderBuffer:function(){this.elBuffer=document.createDocumentFragment(),this._bufferedChildren=[]},startBuffering:function(){this.initRenderBuffer(),this.isBuffering=!0},endBuffering:function(){this.isBuffering=!1,this.appendBuffer(this,this.elBuffer),this._triggerShowBufferedChildren(),this.initRenderBuffer()},_triggerShowBufferedChildren:function(){this._isShown&&(_.each(this._bufferedChildren,function(e){Marionette.triggerMethod.call(e,"show")}),this._bufferedChildren=[])},_initialEvents:function(){this.collection&&(this.listenTo(this.collection,"add",this.addChildView),this.listenTo(this.collection,"remove",this.removeItemView),this.listenTo(this.collection,"reset",this.render))},addChildView:function(e,t,n){this.closeEmptyView();var r=this.getItemView(e),i=this.collection.indexOf(e);this.addItemView(e,r,i)},onShowCalled:function(){this.children.each(function(e){Marionette.triggerMethod.call(e,"show")})},triggerBeforeRender:function(){this.triggerMethod("before:render",this),this.triggerMethod("collection:before:render",this)},triggerRendered:function(){this.triggerMethod("render",this),this.triggerMethod("collection:rendered",this)},render:function(){return this.isClosed=!1,this.triggerBeforeRender(),this._renderChildren(),this.triggerRendered(),this},_renderChildren:function(){this.startBuffering(),this.closeEmptyView(),this.closeChildren(),this.isEmpty(this.collection)?this.showEmptyView():this.showCollection(),this.endBuffering()},showCollection:function(){var e;this.collection.each(function(t,n){e=this.getItemView(t),this.addItemView(t,e,n)},this)},showEmptyView:function(){var e=this.getEmptyView();if(e&&!this._showingEmptyView){this._showingEmptyView=!0;var t=new Backbone.Model;this.addItemView(t,e,0)}},closeEmptyView:function(){this._showingEmptyView&&(this.closeChildren(),delete this._showingEmptyView)},getEmptyView:function(){return Marionette.getOption(this,"emptyView")},getItemView:function(e){var t=Marionette.getOption(this,"itemView");return t||throwError("An `itemView` must be specified","NoItemViewError"),t},addItemView:function(e,t,n){var r=Marionette.getOption(this,"itemViewOptions");_.isFunction(r)&&(r=r.call(this,e,n));var i=this.buildItemView(e,t,r);return this.addChildViewEventForwarding(i),this.triggerMethod("before:item:added",i),this.children.add(i),this.renderItemView(i,n),this._isShown&&!this.isBuffering&&Marionette.triggerMethod.call(i,"show"),this.triggerMethod("after:item:added",i),i},addChildViewEventForwarding:function(e){var t=Marionette.getOption(this,"itemViewEventPrefix");this.listenTo(e,"all",function(){var n=slice.call(arguments),r=n[0],i=this.normalizeMethods(this.getItemEvents());n[0]=t+":"+r,n.splice(1,0,e),typeof i!="undefined"&&_.isFunction(i[r])&&i[r].apply(this,n),Marionette.triggerMethod.apply(this,n)},this)},getItemEvents:function(){return _.isFunction(this.itemEvents)?this.itemEvents.call(this):this.itemEvents},renderItemView:function(e,t){e.render(),this.appendHtml(this,e,t)},buildItemView:function(e,t,n){var r=_.extend({model:e},n);return new t(r)},removeItemView:function(e){var t=this.children.findByModel(e);this.removeChildView(t),this.checkEmpty()},removeChildView:function(e){e&&(e.close?e.close():e.remove&&e.remove(),this.stopListening(e),this.children.remove(e)),this.triggerMethod("item:removed",e)},isEmpty:function(e){return!this.collection||this.collection.length===0},checkEmpty:function(){this.isEmpty(this.collection)&&this.showEmptyView()},appendBuffer:function(e,t){e.$el.append(t)},appendHtml:function(e,t,n){e.isBuffering?(e.elBuffer.appendChild(t.el),e._bufferedChildren.push(t)):e.$el.append(t.el)},_initChildViewStorage:function(){this.children=new Backbone.ChildViewContainer},close:function(){if(this.isClosed)return;this.triggerMethod("collection:before:close"),this.closeChildren(),this.triggerMethod("collection:closed"),Marionette.View.prototype.close.apply(this,arguments)},closeChildren:function(){this.children.each(function(e){this.removeChildView(e)},this),this.checkEmpty()}});